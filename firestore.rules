rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        
        function isAuth() {
            return request.auth != null
        }

        function isAdmin() {
            return isAuth() && 
            (request.auth.uid == '1bOAvkBFV1St3ekuxydGxNlqIGM2'
            || request.auth.uid == 'pUWeCV6FFFfikjLyo6KTuxayrzZ2'
            || request.auth.uid == 'Pv3IEvvuYONvSjNl630Tap0ERGN2')
        }

        function actualData() {
            return resource.data
        }

        function incomingData() {
            return request.resource.data
        }

        function notModified(fields) {
            return incomingData().diff(incomingData()).unchangedKeys().hasAll(fields)
        }

        // lock access for all documents
        match /{document=**} {
            allow read, write: if false;
        }

        match /mails/{mail} {
            allow read: if isAdmin()

            // Only valid emails
            allow create: if 
                incomingData().mail.matches('.+@.+\\.[a-z]+')

            // unsubscribe
            allow delete: if isAuth()
                && actualData().mail == request.auth.token.email
        }

        match /users/{id} {
            allow read: if true

            allow list, delete: if false

            allow create, update: if isAuth()
                && request.auth.uid == id
        }
        
        match /magazines/{magazine} {
            allow read: if true
            allow write: if isAdmin()
        }

        match /articles/{articleId} {
            allow get: if true

            allow list: 
                if request.query.limit <= 15
                && (
                    isAdmin()
                    || actualData().published == true
                    || (isAuth() && actualData().uid == request.auth.uid)
                )

            allow create: if isAuth()
                && incomingData().uid == request.auth.uid
                && incomingData().published == false
                && incomingData().title.size() <= 100
                && incomingData().summary.size() <= 500
                && incomingData().content.size() <= 4096
                && incomingData().createdAt == request.time

            allow update:
                if (
                    isAuth()
                    && notModified(['uid', 'createdAt'])
                    && request.auth.uid == actualData().uid
                    && incomingData().published == false
                    && incomingData().title.size() <= 100
                    && incomingData().summary.size() <= 500
                    && incomingData().content.size() <= 4096
                    && incomingData().updatedAt == request.time
                )
                || isAdmin()

            allow delete: if isAuth()
                && actualData().uid == request.auth.uid
        }

        match /categories/{cid} {
            allow read: if true
        }
    }
}